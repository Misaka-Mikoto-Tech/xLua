-- Tencent is pleased to support the open source community by making xLua available.
-- Copyright (C) 2016 THL A29 Limited, a Tencent company. All rights reserved.
-- Licensed under the MIT License (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at
-- http://opensource.org/licenses/MIT
-- Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.

local util = require 'xlua.util'

local yield_return = (require 'cs_coroutine').yield_return

local co = coroutine.create(function()
    print('coroutine start!')
    local s = os.time()
    -- 调用 C# 函数直到遇到 yield return，然后立刻 coroutine.yield(), 等C#函数完全执行完毕调用回调后再 coroutine.resume
    yield_return(CS.UnityEngine.WaitForSeconds(3))
    -- 此行代码是在 cb_func 中被调用的 并且也没跟着 coroutine.yield，因此不会立刻打印 8
    print('wait interval:', os.time() - s)
    
    local www = CS.UnityEngine.WWW('http://www.qq.com')
    yield_return(www)
	if not www.error then
        print(www.bytes)
	else
	    print('error:', www.error)
	end
end)

assert(coroutine.resume(co))

